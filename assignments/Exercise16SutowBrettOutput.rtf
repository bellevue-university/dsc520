{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 > setwd("/Users/Brett/Desktop/dsc520-master")\
> datasetcluster_df<- read.csv("/Users/Brett/Desktop/dsc520-master/data/clustering-data.csv")\
> head(datasetcluster_df)\
    x   y\
1  46 236\
2  69 236\
3 144 236\
4 171 236\
5 194 236\
6 195 236\
\
> library('VIM')\
> library('ggpubr')\
> library('factoextra')\
> aggr(datasetcluster_df)\
> cluster2 <- kmeans(datasetcluster_df[, 1:2], 2)\
> cluster3 <- kmeans(datasetcluster_df[, 1:2],3 )\
> cluster4 <- kmeans(datasetcluster_df[, 1:2],4 )\
> cluster5 <- kmeans(datasetcluster_df[, 1:2],5 )\
> cluster6 <- kmeans(datasetcluster_df[, 1:2],6 )\
> cluster7 <- kmeans(datasetcluster_df[, 1:2],7 )\
> cluster8 <- kmeans(datasetcluster_df[, 1:2],8 )\
> cluster9 <- kmeans(datasetcluster_df[, 1:2],9 )\
> cluster10 <- kmeans(datasetcluster_df[, 1:2],10)\
> cluster11 <- kmeans(datasetcluster_df[, 1:2],11 )\
> cluster12 <- kmeans(datasetcluster_df[, 1:2],12 )\
\
> cluster2\
K-means clustering with 2 clusters of sizes 2714, 1308\
\
Cluster means:\
         x        y\
1  62.2815 162.4090\
2 207.8005 203.2898\
\
Clustering vector:\
   [1] 1 1 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
  [32] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
  [63] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
  [94] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [125] 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [156] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [187] 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2\
 [218] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [249] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [280] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1\
 [311] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [342] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [373] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2\
 [404] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [435] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2\
 [466] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1\
 [497] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [528] 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2\
 [559] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [590] 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [621] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [652] 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2\
 [683] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1\
 [714] 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [745] 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2\
 [776] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1\
 [807] 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [838] 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\
 [869] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1\
 [900] 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [931] 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [962] 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [993] 2 2 2 2 2 2 2 2\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
[1] 5385717 3057964\
 (between_SS / total_SS =  70.5 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"\
\
> cluster3\
K-means clustering with 3 clusters of sizes 2125, 605, 1292\
\
Cluster means:\
          x        y\
1  76.33694 167.7765\
2  15.29917 142.8198\
3 208.48529 204.1409\
\
Clustering vector:\
   [1] 1 1 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
  [32] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
  [63] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
  [94] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [125] 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [156] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [187] 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3\
 [218] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [249] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [280] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1\
 [311] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [342] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [373] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3\
 [404] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [435] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3\
 [466] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1\
 [497] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [528] 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3\
 [559] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [590] 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [621] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [652] 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3\
 [683] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1\
 [714] 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [745] 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3\
 [776] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1\
 [807] 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [838] 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3\
 [869] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1\
 [900] 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [931] 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [962] 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [993] 3 3 3 3 3 3 3 3\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
[1] 3354777.6  125040.2 2931827.1\
 (between_SS / total_SS =  77.6 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"   \
\
> cluster4\
K-means clustering with 4 clusters of sizes 2103, 331, 985, 603\
\
Cluster means:\
          x        y\
1  75.47028 168.1265\
2 217.65861 137.4985\
3 203.98579 224.8406\
4  15.17413 142.8375\
\
Clustering vector:\
   [1] 1 1 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
  [32] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
  [63] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
  [94] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [125] 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [156] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [187] 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3\
 [218] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [249] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [280] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1\
 [311] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [342] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [373] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3\
 [404] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [435] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3\
 [466] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1\
 [497] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [528] 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3\
 [559] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [590] 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [621] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [652] 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3\
 [683] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1\
 [714] 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [745] 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3\
 [776] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1\
 [807] 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [838] 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3\
 [869] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1\
 [900] 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [931] 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [962] 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [993] 3 3 3 3 3 3 3 3\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
[1] 3197682.2  358183.2  831375.8  122116.8\
 (between_SS / total_SS =  84.2 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"      \
> cluster5\
K-means clustering with 5 clusters of sizes 1921, 334, 985, 341, 441\
\
Cluster means:\
          x        y\
1  63.78501 144.2920\
2 216.97605 137.4731\
3 203.98579 224.8406\
4  58.82698 186.9824\
5  56.34467 223.0181\
\
Clustering vector:\
   [1] 5 5 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\
  [32] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
  [63] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
  [94] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [125] 3 3 3 3 3 3 3 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [156] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [187] 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3\
 [218] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [249] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [280] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5\
 [311] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [342] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [373] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3\
 [404] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [435] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3\
 [466] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 5\
 [497] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [528] 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3\
 [559] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\
 [590] 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [621] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [652] 3 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3\
 [683] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5\
 [714] 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [745] 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3\
 [776] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5\
 [807] 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [838] 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3 3\
 [869] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5\
 [900] 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [931] 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\
 [962] 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [993] 3 3 3 3 3 3 3 3\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
[1] 2738719.38  375379.07  831375.78   35774.69   47345.46\
 (between_SS / total_SS =  85.9 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"      \
\
> cluster6\
K-means clustering with 6 clusters of sizes 985, 930, 771, 480, 569, 287\
\
Cluster means:\
          x        y\
1 203.98579 224.8406\
2  74.28817 145.8355\
3  57.31518 207.7575\
4 112.54167 142.3063\
5  13.07206 143.2460\
6 227.08362 137.9477\
\
Clustering vector:\
   [1] 3 3 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
  [32] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
  [63] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
  [94] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [125] 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [156] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [187] 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1\
 [218] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [249] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [280] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3\
 [311] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [342] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [373] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1\
 [404] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [435] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1\
 [466] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3\
 [497] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [528] 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1\
 [559] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [590] 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [621] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [652] 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1\
 [683] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3\
 [714] 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [745] 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1\
 [776] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3\
 [807] 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [838] 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1\
 [869] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3\
 [900] 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [931] 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [962] 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [993] 1 1 1 1 1 1 1 1\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
[1] 831375.8 185246.6 321932.1 177747.1  75619.6 163518.2\
 (between_SS / total_SS =  93.9 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"      \
> cluster7\
K-means clustering with 7 clusters of sizes 930, 287, 467, 569, 480, 771, 518\
\
Cluster means:\
          x        y\
1  74.28817 145.8355\
2 227.08362 137.9477\
3 231.08994 224.3683\
4  13.07206 143.2460\
5 112.54167 142.3063\
6  57.31518 207.7575\
7 179.55019 225.2664\
\
Clustering vector:\
   [1] 6 6 7 7 7 7 3 3 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\
  [32] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\
  [63] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3\
  [94] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [125] 3 3 3 3 3 3 3 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\
 [156] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [187] 3 3 3 3 3 3 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7\
 [218] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\
 [249] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3\
 [280] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 6 6 6 6 6\
 [311] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7\
 [342] 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [373] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7\
 [404] 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [435] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7\
 [466] 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 6\
 [497] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3\
 [528] 3 3 3 3 3 3 3 3 3 3 3 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7\
 [559] 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\
 [590] 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [621] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3\
 [652] 3 3 3 3 3 3 3 3 3 3 3 3 3 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7\
 [683] 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 6 6 6 6 6 6 6\
 [714] 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3\
 [745] 3 3 3 3 3 3 3 3 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7\
 [776] 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 6 6 6 6 6 6 6 6 6 6\
 [807] 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3\
 [838] 3 3 3 3 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7\
 [869] 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 6 6 6 6 6 6 6 6 6 6 6 6\
 [900] 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3\
 [931] 3 3 3 3 3 3 3 3 3 3 3 3 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\
 [962] 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3\
 [993] 3 3 3 3 3 3 3 3\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
[1] 185246.60 163518.21  65846.87  75619.60 177747.15 321932.06\
[7] 112959.43\
 (between_SS / total_SS =  96.1 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"      \
> cluster8\
K-means clustering with 8 clusters of sizes 518, 558, 810, 115, 467, 226, 566, 762\
\
Cluster means:\
          x        y\
1 179.55019 225.2664\
2 103.39427 143.7043\
3  71.36420 146.2494\
4 171.17391 134.5739\
5 231.08994 224.3683\
6 237.85841 138.8628\
7  12.91166 143.2915\
8  57.29790 208.1391\
\
Clustering vector:\
   [1] 8 8 1 1 1 1 5 5 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\
  [32] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
  [63] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5\
  [94] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\
 [125] 5 5 5 5 5 5 5 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [156] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\
 [187] 5 5 5 5 5 5 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1\
 [218] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [249] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5\
 [280] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 8 8 8 8 8\
 [311] 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [342] 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\
 [373] 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1\
 [404] 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\
 [435] 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1\
 [466] 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 8\
 [497] 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5\
 [528] 5 5 5 5 5 5 5 5 5 5 5 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1\
 [559] 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\
 [590] 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\
 [621] 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5\
 [652] 5 5 5 5 5 5 5 5 5 5 5 5 5 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1\
 [683] 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 8 8 8 8 8 8 8\
 [714] 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5\
 [745] 5 5 5 5 5 5 5 5 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1\
 [776] 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 8 8 8 8 8 8 8 8 8 8\
 [807] 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5\
 [838] 5 5 5 5 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1 1\
 [869] 1 1 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 8 8 8 8 8 8 8 8 8 8 8 8\
 [900] 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5\
 [931] 5 5 5 5 5 5 5 5 5 5 5 5 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\
 [962] 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 5 5 5\
 [993] 5 5 5 5 5 5 5 5\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
[1] 112959.43 106331.47 149625.19  44348.64  65846.87  32762.22\
[7]  72634.48 311762.63\
 (between_SS / total_SS =  96.9 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"\
\
> cluster9\
K-means clustering with 9 clusters of sizes 467, 548, 107, 518, 560, 616, 231, 216, 759\
\
Cluster means:\
          x        y\
1 231.08994 224.3683\
2  65.44343 144.9781\
3 179.35514 134.5514\
4 179.55019 225.2664\
5  12.61071 143.3839\
6  89.45617 146.5373\
7 118.69697 141.4589\
8 239.28704 139.0648\
9  57.42161 208.2885\
\
Clustering vector:\
   [1] 9 9 4 4 4 4 1 1 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\
  [32] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
  [63] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1\
  [94] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [125] 1 1 1 1 1 1 1 9 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [156] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [187] 1 1 1 1 1 1 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4\
 [218] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [249] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1\
 [280] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9 9 9 9 9\
 [311] 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [342] 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [373] 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4 4\
 [404] 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [435] 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4\
 [466] 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9\
 [497] 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1\
 [528] 1 1 1 1 1 1 1 1 1 1 1 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4\
 [559] 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\
 [590] 9 9 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [621] 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1\
 [652] 1 1 1 1 1 1 1 1 1 1 1 1 1 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4\
 [683] 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9 9 9 9 9 9 9\
 [714] 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1\
 [745] 1 1 1 1 1 1 1 1 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4\
 [776] 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9 9 9 9 9 9 9 9 9 9\
 [807] 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1\
 [838] 1 1 1 1 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4 4 4\
 [869] 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9 9 9 9 9 9 9 9 9 9 9 9\
 [900] 9 9 9 9 9 9 9 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1\
 [931] 1 1 1 1 1 1 1 1 1 1 1 1 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\
 [962] 9 9 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1\
 [993] 1 1 1 1 1 1 1 1\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
[1]  65846.87  86120.98  34946.97 112959.43  67391.59  73213.96\
[7]  33108.15  22577.30 307350.90\
 (between_SS / total_SS =  97.2 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"      \
> cluster10\
K-means clustering with 10 clusters of sizes 600, 441, 196, 985, 341, 231, 216, 532, 373, 107\
\
Cluster means:\
            x        y\
1   89.756667 146.6700\
2   56.344671 223.0181\
3   23.489796 138.3980\
4  203.985787 224.8406\
5   58.826979 186.9824\
6  118.696970 141.4589\
7  239.287037 139.0648\
8   66.565789 143.7594\
9    7.597855 145.7936\
10 179.355140 134.5514\
\
Clustering vector:\
   [1] 2 2 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
  [32] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
  [63] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
  [94] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [125] 4 4 4 4 4 4 4 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [156] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [187] 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4\
 [218] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [249] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [280] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 2 2 2 2 2\
 [311] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [342] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [373] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4 4\
 [404] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [435] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4\
 [466] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 2\
 [497] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [528] 4 4 4 4 4 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4\
 [559] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [590] 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [621] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [652] 4 4 4 4 4 4 4 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4\
 [683] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 2 2 2 2 2 2 2\
 [714] 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [745] 4 4 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4\
 [776] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2\
 [807] 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [838] 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4 4 4\
 [869] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2\
 [900] 2 2 2 2 2 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [931] 4 4 4 4 4 4 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\
 [962] 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\
 [993] 4 4 4 4 4 4 4 4\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
 [1]  70203.13  47345.46  11925.94 831375.78  35774.69  33108.15\
 [7]  22577.30  58367.90  24216.78  34946.97\
 (between_SS / total_SS =  95.9 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"      \
> cluster11\
K-means clustering with 11 clusters of sizes 439, 233, 341, 560, 616, 84, 521, 107, 441, 462, 218\
\
Cluster means:\
           x        y\
1  184.00683 223.7677\
2  118.17167 141.4549\
3   58.82698 186.9824\
4   12.61071 143.3839\
5   89.27110 146.7792\
6  157.85714 233.6310\
7   65.72169 143.4299\
8  178.21495 134.5514\
9   56.34467 223.0181\
10 231.35714 224.2619\
11 239.00917 139.0229\
\
Clustering vector:\
   [1]  9  9  6  6  1  1 10 10  9  9  9  9  9  9  9  9  9  9  9  9\
  [21]  9  9  9  9  9  9  9  9  9  9  9  6  6  6  6  6  6  6  6  6\
  [41]  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  1\
  [61]  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\
  [81]  1  1  1  1  1  1  1  1  1  1  1 10 10 10 10 10 10 10 10 10\
 [101] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\
 [121] 10 10 10 10 10 10 10 10 10 10 10  9  6  6  6  6  6  6  6  6\
 [141]  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  1\
 [161]  1  1  1  1  1  1  1  1  1  1  1  1 10 10 10 10 10 10 10 10\
 [181] 10 10 10 10 10 10 10 10 10 10 10 10  9  9  9  9  9  9  9  9\
 [201]  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  6  6  6  6  6\
 [221]  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  1\
 [241]  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\
 [261]  1  1  1  1  1  1  1  1  1 10 10 10 10 10 10 10 10 10 10 10\
 [281] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\
 [301] 10 10 10 10 10  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9\
 [321]  9  9  9  9  9  9  9  9  6  1  1  1  1  1  1  1  1  1  1  1\
 [341]  1  1  1  1  1  1  1  1  1  1 10 10 10 10 10 10 10 10 10 10\
 [361] 10 10 10 10 10 10 10 10 10 10 10 10  9  9  9  9  9  9  9  9\
 [381]  9  9  9  9  9  9  9  9  9  9  9  9  9  1  1  1  1  1  1  1\
 [401]  1  1  1  1  1  1  1  1  1  1  1  1  1 10 10 10 10 10 10 10\
 [421] 10 10 10 10 10 10 10 10 10 10 10 10 10 10  9  9  9  9  9  9\
 [441]  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  1  1  1  1\
 [461]  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 10 10 10 10\
 [481] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10  9  9  9  9  9\
 [501]  9  9  9  9  9  9  9  9  9  9  1  1  1  1  1  1  1  1  1  1\
 [521]  1  1  1  1 10 10 10 10 10 10 10 10 10 10 10 10 10 10  9  9\
 [541]  9  9  9  9  9  9  9  9  9  9  9  1  1  1  1  1  1  1  1  1\
 [561]  1  1  1 10 10 10 10 10 10 10 10 10 10 10  9  9  9  9  9  9\
 [581]  9  9  9  9  9  9  9  9  9  9  9  1  1  1  1  1  1  1  1  1\
 [601]  1  1  1  1  1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\
 [621]  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  1  1  1  1\
 [641]  1  1  1  1  1  1  1  1  1  1 10 10 10 10 10 10 10 10 10 10\
 [661] 10 10 10 10  9  9  9  9  9  9  9  9  9  9  9  9  9  9  1  1\
 [681]  1  1  1  1  1  1  1  1  1  1  1  1 10 10 10 10 10 10 10 10\
 [701] 10 10 10 10 10 10  9  9  9  9  9  9  9  9  9  9  9  9  9  9\
 [721]  9  9  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 10 10 10\
 [741] 10 10 10 10 10 10 10 10 10 10 10 10  9  9  9  9  9  9  9  9\
 [761]  9  9  9  9  9  9  9  9  1  1  1  1  1  1  1  1  1  1  1  1\
 [781]  1  1 10 10 10 10 10 10 10 10 10 10 10 10 10 10  9  9  9  9\
 [801]  9  9  9  9  9  9  9  9  9  9  9  9  1  1  1  1  1  1  1  1\
 [821]  1  1  1  1  1  1 10 10 10 10 10 10 10 10 10 10 10 10 10 10\
 [841] 10  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  1  1  1\
 [861]  1  1  1  1  1  1  1  1  1  1  1  1 10 10 10 10 10 10 10 10\
 [881] 10 10 10 10 10 10 10  9  9  9  9  9  9  9  9  9  9  9  9  9\
 [901]  9  9  9  9  9  9  1  1  1  1  1  1  1  1  1  1  1  1  1  1\
 [921]  1  1  1  1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\
 [941] 10 10  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9\
 [961]  9  9  9  6  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\
 [981]  1  1  1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
 [1] 55139.280 32322.910 35774.686 67391.591 73385.700  6715.845\
 [7] 60236.338 35016.523 47345.465 62273.381 24436.867\
 (between_SS / total_SS =  98.3 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"      \
> cluster12\
K-means clustering with 12 clusters of sizes 467, 148, 518, 204, 380, 441, 193, 586, 554, 79, 369, 83\
\
Cluster means:\
           x        y\
1  231.08994 224.3683\
2   51.32432 183.3919\
3  179.55019 225.2664\
4  240.76961 139.3137\
5   62.03684 141.3263\
6   56.34467 223.0181\
7   64.58031 189.7358\
8   82.65188 148.1451\
9   12.33574 143.4801\
10 145.82278 135.2025\
11 106.95393 143.1545\
12 193.44578 134.5904\
\
Clustering vector:\
   [1] 6 6 3 3 3 3 1 1 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\
  [32] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
  [63] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1\
  [94] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [125] 1 1 1 1 1 1 1 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [156] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [187] 1 1 1 1 1 1 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3\
 [218] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [249] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1\
 [280] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6 6 6 6 6\
 [311] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3\
 [342] 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [373] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3\
 [404] 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [435] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3\
 [466] 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6\
 [497] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1\
 [528] 1 1 1 1 1 1 1 1 1 1 1 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3\
 [559] 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\
 [590] 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\
 [621] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1\
 [652] 1 1 1 1 1 1 1 1 1 1 1 1 1 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3\
 [683] 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6 6 6 6 6 6 6\
 [714] 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1\
 [745] 1 1 1 1 1 1 1 1 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3\
 [776] 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6 6 6 6 6 6 6 6 6 6\
 [807] 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1\
 [838] 1 1 1 1 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3 3\
 [869] 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6 6 6 6 6 6 6 6 6 6 6 6\
 [900] 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1\
 [931] 1 1 1 1 1 1 1 1 1 1 1 1 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\
 [962] 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1\
 [993] 1 1 1 1 1 1 1 1\
 [ reached getOption("max.print") -- omitted 3022 entries ]\
\
Within cluster sum of squares by cluster:\
 [1]  65846.874   7485.703 112959.431  14212.093  35579.021\
 [6]  47345.465  10198.528  64585.654  62997.834  14398.278\
[11]  46918.412  15864.578\
 (between_SS / total_SS =  98.3 %)\
\
Available components:\
\
[1] "cluster"      "centers"      "totss"        "withinss"    \
[5] "tot.withinss" "betweenss"    "size"         "iter"        \
[9] "ifault"  \
\
> fviz_cluster(cluster2, data= datasetcluster_df[, -100],\
+              palette = c("#2E9FDF", "#00AFBB", "#E7B800"), \
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster3, data= datasetcluster_df[, -100],\
+              palette = c("#2E9FDF", "#00AFBB", "#E7B800"), \
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster4, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster5, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster6, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster7, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster8, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster9, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster10, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster11, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
> \
> fviz_cluster(cluster12, data= datasetcluster_df[, -100],\
+              geom = "point",\
+              ellipse.type = "convex", \
+              ggtheme = theme_bw())\
\
> distance2<-distance(cluster2$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 2 vectors.\
> distance2\
euclidean \
 151.1523 \
> distance3<-distance(cluster3$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 3 vectors.\
> distance3\
          v1        v2       v3\
v1   0.00000  65.94272 137.0604\
v2  65.94272   0.00000 202.6848\
v3 137.06041 202.68484   0.0000\
> distance4<-distance(cluster4$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 4 vectors.\
> distance4\
          v1        v2        v3        v4\
v1   0.00000 145.44963 140.47323  65.38471\
v2 145.44963   0.00000  88.40584 202.55486\
v3 140.47323  88.40584   0.00000 205.85032\
v4  65.38471 202.55486 205.85032   0.00000\
> distance5<-distance(cluster5$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 5 vectors.\
> distance5\
          v1        v2        v3        v4        v5\
v1   0.00000 153.34273 161.69209  42.97732  79.07691\
v2 153.34273   0.00000  88.32801 165.71754 181.99011\
v3 161.69209  88.32801   0.00000 150.01441 147.65236\
v4  42.97732 165.71754 150.01441   0.00000  36.12113\
v5  79.07691 181.99011 147.65236  36.12113   0.00000\
> distance6<-distance(cluster6$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 6 vectors.\
> distance6\
          v1        v2        v3        v4        v5        v6\
v1   0.00000 151.86600 147.66212 123.18258 207.61918  89.91041\
v2 151.86600   0.00000  64.20602  38.41595  61.27086 152.99891\
v3 147.66212  64.20602   0.00000  85.63776  78.22516 183.56123\
v4 123.18258  38.41595  85.63776   0.00000  99.47405 114.62485\
v5 207.61918  61.27086  78.22516  99.47405   0.00000 214.07714\
v6  89.91041 152.99891 183.56123 114.62485 214.07714   0.00000\
\
> distance7<-distance(cluster7$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 7 vectors.\
> distance7\
          v1        v2        v3        v4        v5        v6\
v1   0.00000 152.99891 175.36875  61.27086  38.41595  64.20602\
v2 152.99891   0.00000  86.51339 214.07714 114.62485 183.56123\
v3 175.36875  86.51339   0.00000 232.62119 144.18000 174.56686\
v4  61.27086 214.07714 232.62119   0.00000  99.47405  78.22516\
v5  38.41595 114.62485 144.18000  99.47405   0.00000  85.63776\
v6  64.20602 183.56123 174.56686  78.22516  85.63776   0.00000\
v7 131.86874  99.41820  51.54757 185.58640 106.64207 123.48264\
          v7\
v1 131.86874\
v2  99.41820\
v3  51.54757\
v4 185.58640\
v5 106.64207\
v6 123.48264\
v7   0.00000\
> distance8<-distance(cluster8$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 8 vectors.\
> distance8\
          v1        v2        v3        v4        v5        v6\
v1   0.00000 111.58899 133.96977  91.07849  51.54757 104.23735\
v2 111.58899   0.00000  32.13102  68.39185 151.03929 134.55127\
v3 133.96977  32.13102   0.00000 100.49028 177.80573 166.65798\
v4  91.07849  68.39185 100.49028   0.00000 107.94889  66.82228\
v5  51.54757 151.03929 177.80573 107.94889   0.00000  85.77295\
v6 104.23735 134.55127 166.65798  66.82228  85.77295   0.00000\
v7 185.71021  90.48355  58.52733 158.50217 232.75568 224.99034\
v8 123.44621  79.22575  63.46809 135.57132 174.54816 193.39415\
          v7        v8\
v1 185.71021 123.44621\
v2  90.48355  79.22575\
v3  58.52733  63.46809\
v4 158.50217 135.57132\
v5 232.75568 174.54816\
v6 224.99034 193.39415\
v7   0.00000  78.58338\
v8  78.58338   0.00000\
> distance9<-distance(cluster9$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 9 vectors.\
> distance9\
          v1        v2        v3        v4        v5        v6\
v1   0.00000 183.68878 103.65117  51.54757 233.00567 161.60997\
v2 183.68878   0.00000 114.38791 139.52263  52.85676  24.06331\
v3 103.65117 114.38791   0.00000  90.71522 166.97819  90.69447\
v4  51.54757 139.52263  90.71522   0.00000 185.93959 119.64614\
v5 233.00567  52.85676 166.97819 185.93959   0.00000  76.91013\
v6 161.60997  24.06331  90.69447 119.64614  76.91013   0.00000\
v7 139.66443  53.36970  61.05020 103.57035 106.10372  29.67853\
v8  85.69643 173.94415  60.10161 104.87710 226.71747 150.01709\
v9 174.41114  63.81662 142.49544 123.30304  78.87094  69.56597\
          v7        v8        v9\
v1 139.66443  85.69643 174.41114\
v2  53.36970 173.94415  63.81662\
v3  61.05020  60.10161 142.49544\
v4 103.57035 104.87710 123.30304\
v5 106.10372 226.71747  78.87094\
v6  29.67853 150.01709  69.56597\
v7   0.00000 120.61383  90.66903\
v8 120.61383   0.00000 194.59434\
v9  90.66903 194.59434   0.00000\
> distance10<-distance(cluster10$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 10 vectors.\
> distance10\
           v1        v2        v3        v4        v5        v6\
v1    0.00000  83.33907  66.78117 138.41581  50.81078  29.40573\
v2   83.33907   0.00000  90.77454 147.65236  36.12113 102.66315\
v3   66.78117  90.77454   0.00000 200.12780  60.07633  95.25637\
v4  138.41581 147.65236 200.12780   0.00000 150.01441 119.27571\
v5   50.81078  36.12113  60.07633 150.01441   0.00000  75.21175\
v6   29.40573 102.66315  95.25637 119.27571  75.21175   0.00000\
v7  149.72365 201.28604 215.79827  92.75594 186.71349 120.61383\
v8   23.37281  79.91508  43.40837 159.55694  43.91033  52.18192\
v9   82.16349  91.32298  17.52851 211.69944  65.73388 111.18364\
v10  90.41431 151.51878 155.91280  93.58851 131.43838  61.05020\
           v7        v8        v9       v10\
v1  149.72365  23.37281  82.16349  90.41431\
v2  201.28604  79.91508  91.32298 151.51878\
v3  215.79827  43.40837  17.52851 155.91280\
v4   92.75594 159.55694 211.69944  93.58851\
v5  186.71349  43.91033  65.73388 131.43838\
v6  120.61383  52.18192 111.18364  61.05020\
v7    0.00000 172.78504 231.78687  60.10161\
v8  172.78504   0.00000  59.00301 113.16459\
v9  231.78687  59.00301   0.00000 172.12481\
v10  60.10161 113.16459 172.12481   0.00000\
> distance11<- distance(cluster11$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 11 vectors.\
> distance11\
           v1        v2        v3        v4        v5        v6\
v1    0.00000 105.40233 130.47280 189.30973 122.07406  27.94801\
v2  105.40233   0.00000  74.79668 105.57858  29.38692 100.35614\
v3  130.47280  74.79668   0.00000  63.53558  50.42956 109.46717\
v4  189.30973 105.57858  63.53558   0.00000  76.73554 171.00015\
v5  122.07406  29.38692  50.42956  76.73554   0.00000 110.66738\
v6   27.94801 100.35614 109.46717 171.00015 110.66738   0.00000\
v7  142.98784  52.48716  44.09483  53.11099  23.78640 128.93861\
v8   89.40406  60.43885 130.39363 165.83961  89.78044 101.14938\
v9  127.66436 102.34811  36.12113  90.85300  83.04531 102.06573\
v10  47.35289 140.24245 176.51181 233.21931 161.83945  74.09473\
v11 101.02933 120.86197 186.45572 226.44046 149.93882 124.64481\
           v7        v8        v9       v10       v11\
v1  142.98784  89.40406 127.66436  47.35289 101.02933\
v2   52.48716  60.43885 102.34811 140.24245 120.86197\
v3   44.09483 130.39363  36.12113 176.51181 186.45572\
v4   53.11099 165.83961  90.85300 233.21931 226.44046\
v5   23.78640  89.78044  83.04531 161.83945 149.93882\
v6  128.93861 101.14938 102.06573  74.09473 124.64481\
v7    0.00000 112.84309  80.13869 184.30656 173.34352\
v8  112.84309   0.00000 150.59459 104.26920  60.95844\
v9   80.13869 150.59459   0.00000 175.01689 201.05103\
v10 184.30656 104.26920 175.01689   0.00000  85.58175\
v11 173.34352  60.95844 201.05103  85.58175   0.00000\
> distance12<- distance(cluster12$centers, method = "euclidean")\
Metric: 'euclidean'; comparing: 12 vectors.\
> distance12\
           v1        v2        v3        v4        v5        v6\
v1    0.00000 184.37663  51.54757  85.60361 188.34787 174.75048\
v2  184.37663   0.00000 134.89014 194.50553  43.40819  39.94300\
v3   51.54757 134.89014   0.00000 105.52573 144.41374 123.22603\
v4   85.60361 194.50553 105.52573   0.00000 178.74410 202.53145\
v5  188.34787  43.40819 144.41374 178.74410   0.00000  81.88990\
v6  174.75048  39.94300 123.22603 202.53145  81.88990   0.00000\
v7  170.07313  14.69577 120.33496 183.26224  48.47621  34.28620\
v8  166.86474  47.15671 123.84259 158.36417  21.71347  79.36025\
v9  233.23013  55.79478 186.14421 228.47186  49.74775  90.90148\
v10 123.37351 106.07626  96.17193  95.03579  84.00943 125.37111\
v11 148.34229  68.65641 109.60195 133.87079  44.95428  94.54894\
v12  97.35072 150.26676  91.73458  47.55896 131.58147 163.14468\
           v7        v8        v9       v10       v11       v12\
v1  170.07313 166.86474 233.23013 123.37351 148.34229  97.35072\
v2   14.69577  47.15671  55.79478 106.07626  68.65641 150.26676\
v3  120.33496 123.84259 186.14421  96.17193 109.60195  91.73458\
v4  183.26224 158.36417 228.47186  95.03579 133.87079  47.55896\
v5   48.47621  21.71347  49.74775  84.00943  44.95428 131.58147\
v6   34.28620  79.36025  90.90148 125.37111  94.54894 163.14468\
v7    0.00000  45.34719  69.77877  97.84790  62.97094 140.16891\
v8   45.34719   0.00000  70.47071  64.48312  24.80918 111.61998\
v9   69.77877  70.47071   0.00000 133.74345  94.61875 181.32809\
v10  97.84790  64.48312 133.74345   0.00000  39.67394  47.62693\
v11  62.97094  24.80918  94.61875  39.67394   0.00000  86.91481\
v12 140.16891 111.61998 181.32809  47.62693  86.91481   0.00000\
\
> mean2<- mean(distance2)\
> mean3<-mean(distance3)\
> mean4<-mean(distance4)\
> mean5<-mean(distance5)\
> mean6<-mean(distance6)\
> mean7<-mean(distance7)\
> mean8<-mean(distance8)\
> mean9<-mean(distance9)\
> mean10<-mean(distance10)\
> mean11<-mean(distance11)\
> mean12<-mean(distance12)\
> mean2 \
[1] 151.1523\
> mean3\
[1] 90.15288\
> mean4\
[1] 106.0148\
> mean5\
[1] 96.55301\
> mean6\
[1] 100.7073\
> mean7\
[1] 106.2975\
> mean8\
[1] 105.7263\
> mean9\
[1] 102.4284\
> mean10\
[1] 97.75367\
> mean11\
[1] 101.8579\
> mean12\
[1] 99.02052\
\
> averagedf<- data.frame('k' = 2:12, 'means'= c(mean2, mean3, mean4, mean5,mean6, mean7, mean8, mean9, mean10, mean11, mean12))\
> \
> ggplot(averagedf,aes(x=k, y=means)) +geom_line()\
> averagedf\
    k     means\
1   2 151.15225\
2   3  90.15288\
3   4 106.01482\
4   5  96.55301\
5   6 100.70735\
6   7 106.29746\
7   8 105.72625\
8   9 102.42836\
9  10  97.75367\
10 11 101.85794\
11 12  99.02052}